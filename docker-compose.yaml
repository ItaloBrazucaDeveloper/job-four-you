services: # Serviços (containers) necessários para o Job4You funcionar corretamente
  mysql:
    container_name: job4you_database
    build:
      context: ./database # Define o contexto de construção do container, onde o Dockerfile está localizado
      dockerfile: Dockerfile # Especifica o Dockerfile a ser usado para construir o container MySQL
    restart: always # Reinicia o container automaticamente se ele falhar
    ports: # Faz o mapeamento de portas do container para a máquina local
      - "3306:${DB_PORT:-3306}"
    environment: # Captura as variáveis de ambiente do arquivo '.env' para configuração do MySQL
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWD}
    volumes: # Define volumes para persistência de dados do MySQL
      # Mapeia o volume nomeado 'db_data' para persistência de dados do MySQL
      # (dados registrados no banco são salvos mesmo parando de executar o container)
      - db_data:/var/lib/mysql
    networks:
      job4you_network:
          aliases: # Permite que outros containers acessem este serviço pelo alias da variável de ambiente
            - ${DB_HOST}

  app:
    container_name: job4you_app
    build:
      context: ./ # Define o contexto de construção do container, onde o Dockerfile está localizado
      dockerfile: Dockerfile # Especifica o Dockerfile a ser usado para construir o container do app
    restart: always # Reinicia o container automaticamente se ele falhar
    ports: # Faz o mapeamento de portas do container para a máquina local
      - "5173:5173"
    volumes: # Define volumes para persistência de dados do app
      # Mapeia o diretório '.' para o diretório do container onde o código está localizado
      # (as alterações no código são refletidas imediatamente no container)
      - ./app:/job4you/app
      - ./public:/job4you/public
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWD=${DB_PASSWD}
    networks:
      - job4you_network

volumes: # Define volumes nomeados para persistência de dados
  db_data: # Volume nomeado para persistência de dados do MySQL
    driver: local # O driver padrão para volumes persistentes

networks: # Define redes para comunicação entre os containers
  job4you_network:
    driver: bridge